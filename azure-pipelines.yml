trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: credentials

stages:
  - stage: UnitTests
    displayName: Run unit tests
    jobs:
      - job: unitTests
        displayName: "Base build and unit tests"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              ./scripts/check-package-names.sh
            displayName: "check package names"
          - script: |
              npm install
              npm run bootstrap
            displayName: "npm install, bootstrap"
          - script: |
              ./packages/caliper-publish/publish.js version check
            displayName: "version check"
          - script: |
              npm test
            displayName: "unit test"

  - stage: IntegrationTests
    displayName: Run integration tests
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    dependsOn: UnitTests
    jobs:
      - job: fabricIntegration
        displayName: "Fabric Integration Test"
        variables: { BENCHMARK: fabric }
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              .build/benchmark-integration-test-direct.sh

      - job: ethereumIntegration
        displayName: "Ethereum Integration Test"
        variables: { BENCHMARK: ethereum }
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              .build/benchmark-integration-test-direct.sh

      - job: besuIntegration
        displayName: "Besu Integration Test"
        variables: { BENCHMARK: besu }
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              .build/benchmark-integration-test-direct.sh

      - job: fiscoIntegration
        displayName: "FISCO BCOS Integration Test"
        variables: { BENCHMARK: fisco-bcos }
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              .build/benchmark-integration-test-direct.sh

      - job: generatorIntegration
        displayName: "Generator Integration Test"
        variables: { BENCHMARK: generator }
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
              .build/benchmark-integration-test-direct.sh

  - stage: Publish
    displayName: Publish Caliper
    # having a blind succeeded here will not work if a preceding stage was skipped
    condition: and(not(failed('UnitTests')), eq(variables['Build.Reason'], 'IndividualCI'))
    jobs:
      - job: PublishCaliper
        displayName: "Publish Caliper to NPM and DockerHub"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: .build/publish-caliper.sh
            displayName: Publish Caliper
            env:
              NPM_TOKEN: "$(npm)"
              DOCKER_USER: "$(DockerHub-Username)"
              DOCKER_TOKEN: "$(DockerHub-Password)"
